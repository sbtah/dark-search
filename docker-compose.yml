services:
  search:
    build:
      context: .
      dockerfile: ./compose/local/search/Dockerfile
      network: host
      args:
        - DEV=true
    image: search
    container_name: search
    command: /start
    volumes:
      - ./search:/search
      - search-static-data:/search/staticfiles
    ports:
      - "127.0.0.1:9002:8000"
    environment:
      - DB_HOST=${SEARCH_HOST}
      - DB_NAME=${SEARCH_DATABASE}
      - DB_USER=${SEARCH_USER}
      - DB_PASS=${SEARCH_PASSWORD}
      - DB_PORT=${SEARCH_PORT}
      - SECRET_KEY=${DJANGO_SECRET_KEY}
      - ALLOWED_HOSTS=${DJANGO_ALLOWED_HOSTS}
      - CELERY_BROKER=${CELERY_BROKER}
      - CELERY_BACKEND=${CELERY_BACKEND}
    depends_on:
      - search-db
      - redis
    networks:
      - search-network

  search-api:
    build:
      context: .
      dockerfile: ./compose/local/api/Dockerfile
      network: host
      args:
        - DEV=true
    image: search-api
    container_name: search-api
    command: /start
    volumes:
      - ./api:/api
      - search-api-static-data:/api/staticfiles
    ports:
      - "127.0.0.1:8000:8000"
    environment:
      - DB_HOST=${API_HOST}
      - DB_NAME=${API_DATABASE}
      - DB_USER=${API_USER}
      - DB_PASS=${API_PASSWORD}
      - DB_PORT=${API_PORT}
      - SECRET_KEY=${DJANGO_SECRET_KEY}
      - ALLOWED_HOSTS=${DJANGO_ALLOWED_HOSTS}
      - CELERY_BROKER=${CELERY_BROKER}
      - CELERY_BACKEND=${CELERY_BACKEND}
    depends_on:
      - search-api-db
      - redis
    networks:
      - search-network

  front:
    build:
      context: .
      dockerfile: ./compose/local/front/Dockerfile
      network: host
      args:
        - DEV=true
    image: front
    container_name: front
    command: /start
    volumes:
      - ./front:/app
    ports:
      - "127.0.0.1:3000:3000"
    env_file:
      - .env
    depends_on:
      - search-api
    networks:
      - search-network

  search-db:
    image: postgres:16.2
    container_name: search-db
    volumes:
      - search-db-dev:/var/lib/postgresql/data/
    ports:
      - "127.0.0.1:45432:5432"
    environment:
      - POSTGRES_DB=${SEARCH_DATABASE}
      - POSTGRES_USER=${SEARCH_USER}
      - POSTGRES_PASSWORD=${SEARCH_PASSWORD}
    networks:
      - search-network

  search-api-db:
    image: postgres:16.2
    container_name: search-api-db
    volumes:
      - search-api-db-dev:/var/lib/postgresql/data/
    ports:
      - "127.0.0.1:55432:5432"
    environment:
      - POSTGRES_DB=${API_DATABASE}
      - POSTGRES_USER=${API_USER}
      - POSTGRES_PASSWORD=${API_PASSWORD}
    networks:
      - search-network

  search-celery:
    image: search-celery
    container_name: search-celery
    build:
      context: .
      dockerfile: ./compose/local/search/Dockerfile
      network: host
    restart: always
    command: /cstart
    volumes:
      - ./search:/search
    environment:
      - DB_HOST=${SEARCH_HOST}
      - DB_NAME=${SEARCH_DATABASE}
      - DB_USER=${SEARCH_USER}
      - DB_PASS=${SEARCH_PASSWORD}
      - DB_PORT=${SEARCH_PORT}
      - SECRET_KEY=${DJANGO_SECRET_KEY}
      - ALLOWED_HOSTS=${DJANGO_ALLOWED_HOSTS}
      - CELERY_BROKER=${CELERY_BROKER}
      - CELERY_BACKEND=${CELERY_BACKEND}
    depends_on:
      - search-db
      - redis
    networks:
      - search-network

  api-celery:
    image: api-celery
    container_name: api-celery
    build:
      context: .
      dockerfile: ./compose/local/api/Dockerfile
      network: host
    restart: always
    command: /cstart
    volumes:
      - ./api:/api
    environment:
      - DB_HOST=${API_HOST}
      - DB_NAME=${API_DATABASE}
      - DB_USER=${API_USER}
      - DB_PASS=${API_PASSWORD}
      - DB_PORT=${API_PORT}
      - SECRET_KEY=${DJANGO_SECRET_KEY}
      - ALLOWED_HOSTS=${DJANGO_ALLOWED_HOSTS}
      - CELERY_BROKER=${CELERY_BROKER}
      - CELERY_BACKEND=${CELERY_BACKEND}
    depends_on:
      - search-api-db
      - redis
    networks:
      - search-network

  redis:
    image: redis:7.2.0-alpine
    container_name: redis
    volumes:
      - redis-dev:/data
    networks:
      - search-network

  search-beat:
    build:
      context: .
      dockerfile: ./compose/local/search/Dockerfile
      network: host
    image: search-beat
    container_name: search-beat
    command: /bstart
    volumes:
      - ./search:/search
    environment:
      - DB_HOST=${SEARCH_HOST}
      - DB_NAME=${SEARCH_DATABASE}
      - DB_USER=${SEARCH_USER}
      - DB_PASS=${SEARCH_PASSWORD}
      - DB_PORT=${SEARCH_PORT}
      - SECRET_KEY=${DJANGO_SECRET_KEY}
      - ALLOWED_HOSTS=${DJANGO_ALLOWED_HOSTS}
      - CELERY_BROKER=${CELERY_BROKER}
      - CELERY_BACKEND=${CELERY_BACKEND}
    depends_on:
      - search-db
      - redis
    networks:
      - search-network

  search-api-beat:
    build:
      context: .
      dockerfile: ./compose/local/api/Dockerfile
      network: host
    image: search-api-beat
    container_name: search-api-beat
    command: /bstart
    volumes:
      - ./api:/api
    environment:
      - DB_HOST=${API_HOST}
      - DB_NAME=${API_DATABASE}
      - DB_USER=${API_USER}
      - DB_PASS=${API_PASSWORD}
      - DB_PORT=${API_PORT}
      - SECRET_KEY=${DJANGO_SECRET_KEY}
      - ALLOWED_HOSTS=${DJANGO_ALLOWED_HOSTS}
      - CELERY_BROKER=${CELERY_BROKER}
      - CELERY_BACKEND=${CELERY_BACKEND}
    depends_on:
      - search-api-db
      - redis
    networks:
      - search-network

  search-flower:
    build:
      context: .
      dockerfile: ./compose/local/search/Dockerfile
      network: host
    image: search-flower
    container_name: search-flower
    command: /fstart
    volumes:
      - ./search:/search
    environment:
      - DB_HOST=${SEARCH_HOST}
      - DB_NAME=${SEARCH_DATABASE}
      - DB_USER=${SEARCH_USER}
      - DB_PASS=${SEARCH_PASSWORD}
      - DB_PORT=${SEARCH_PORT}
      - SECRET_KEY=${DJANGO_SECRET_KEY}
      - ALLOWED_HOSTS=${DJANGO_ALLOWED_HOSTS}
      - CELERY_BROKER=${CELERY_BROKER}
      - CELERY_BACKEND=${CELERY_BACKEND}
    ports:
      - "127.0.0.1:5559:5555"
    depends_on:
      - search-db
      - redis
    networks:
      - search-network

  search-api-flower:
    build:
      context: .
      dockerfile: ./compose/local/api/Dockerfile
      network: host
    image: search-api-flower
    container_name: search-api-flower
    command: /fstart
    volumes:
      - ./api:/api
    environment:
      - DB_HOST=${API_HOST}
      - DB_NAME=${API_DATABASE}
      - DB_USER=${API_USER}
      - DB_PASS=${API_PASSWORD}
      - DB_PORT=${API_PORT}
      - SECRET_KEY=${DJANGO_SECRET_KEY}
      - ALLOWED_HOSTS=${DJANGO_ALLOWED_HOSTS}
      - CELERY_BROKER=${CELERY_BROKER}
      - CELERY_BACKEND=${CELERY_BACKEND}
    ports:
      - "127.0.0.1:5558:5555"
    depends_on:
      - search-api-db
      - redis
    networks:
      - search-network

  search-privoxy:
    restart: always
    image: dockage/tor-privoxy:latest
    container_name: search-privoxy
    ports:
      - "127.0.0.1:9050:9050" # Tor proxy
      - "127.0.0.1:9051:9051" # Tor control port
      - "127.0.0.1:8118:8118" # Privoxy
    networks:
      - search-network

  search-api-nginx:
    build:
      context: .
      dockerfile: ./compose/local/nginx/Dockerfile
    image: search-api-nginx
    container_name: search-api-nginx
    ports:
      - 80:80
    volumes:
      - search-api-static-data:/api/staticfiles
    depends_on:
      - search-api
    networks:
      - search-network

volumes:
  search-db-dev:
  search-api-db-dev:
  redis-dev:
  search-static-data:
  search-api-static-data:

networks:
  search-network:
    name: search-network
    driver: bridge
    ipam:
      config:
        - subnet: 192.168.95.0/24
